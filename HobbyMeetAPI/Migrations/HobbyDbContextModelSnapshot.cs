// <auto-generated />
using HobbyMeetAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HobbyMeetAPI.Migrations
{
    [DbContext(typeof(HobbyDbContext))]
    partial class HobbyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HobbyMeetAPI.Models.Hobby", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActivityScore")
                        .HasColumnType("int");

                    b.Property<int>("ArtScore")
                        .HasColumnType("int");

                    b.Property<int>("CollectingScore")
                        .HasColumnType("int");

                    b.Property<int>("CraftScore")
                        .HasColumnType("int");

                    b.Property<int>("GameScore")
                        .HasColumnType("int");

                    b.Property<int>("SportScore")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("HobbyMeetAPI.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HobbyMeetAPI.Models.UserHobby", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HobbyName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "Name");

                    b.HasIndex("HobbyName");

                    b.ToTable("UserHobbies");
                });

            modelBuilder.Entity("HobbyMeetAPI.Models.UserHobby", b =>
                {
                    b.HasOne("HobbyMeetAPI.Models.Hobby", "Hobby")
                        .WithMany()
                        .HasForeignKey("HobbyName");

                    b.HasOne("HobbyMeetAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
